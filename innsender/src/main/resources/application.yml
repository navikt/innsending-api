server:
  port: 9064
  max-http-request-header-size: 32KB

spring:
  application:
    name: innsending-api
  jackson:
    default-property-inclusion: non_null
  jpa:
    open-in-view: false
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

management:
  endpoint:
    health:
      show-details: always
  endpoints.web:
    exposure:
      include: info, health, metrics, refresh, prometheus
    base-path: "/internal"
  metrics:
    tags:
      application: innsending-api
    export:
      prometheus:
        enabled: true

cron:
  startSlettGamleIkkeInnsendteSoknader: 0 0 2 * * *
  slettEldreEnn: 56 # 8 uker
  startSlettInnsendteSoknader: 0 0 5 * * *
  slettInnsendtEldreEnn: 21 # 3 uker
  sletteVindu: 100
  startSlettPermanentIkkeInnsendteSoknader: 0 0 3 * * *
  # Slett permanent alle søknader opprettet for mer enn 6 måneder siden ( som er ca 366/2=183 dager )
  slettPermanentEldreEnn: 183
  # Kjører hvert 10. minutt
  runVerifyArchivedApplications: 0 0,10,20,30,40,50 * * * *

ettersendingsfrist: 14

verifyArchivedApplications:
  offsetMinutes: 95

kafka:
  applicationId: ${KAFKA_STREAMS_APPLICATION_ID}
  brokers: ${KAFKA_BROKERS}
  security:
    enabled: ${KAFKA_SECURITY}
    protocol: SSL
    keyStoreType: PKCS12
    keyStorePath: ${KAFKA_KEYSTORE_PATH}
    keyStorePassword: ${KAFKA_CREDSTORE_PASSWORD}
    trustStorePath: ${KAFKA_TRUSTSTORE_PATH}
    trustStorePassword: ${KAFKA_CREDSTORE_PASSWORD}
  topics:
    arkiveringstilbakemeldingTopic: ${KAFKA_ARKIVERINGSTILBAKEMELDING_TOPIC}

fil-konvertering_url: http://localhost:3000

---
spring:
  config:
    activate:
      on-profile: local | docker

  application:
    name: innsending-api

  codec:
    max-in-memory-size: 104857600

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

  flyway:
    enabled: true

  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:postgres}?user=${DATABASE_USERNAME:postgres}&password=${DATABASE_PASSWORD:postgres}

status_log_url: "https://logs.adeo.no"

restconfig:
  version: 1.0
  maxFileSize: 50
  maxFileSizeSum: 150
  maxNumberOfPages: 200
  sanityHost: https://www.nav.no
  sanityEndpoint: /soknader/api/sanity/skjemautlisting
  filesInOneRequestToFilestorage: 10
  soknadsMottakerHost: http://localhost:9043/soknadsmottaker-api
  soknadsMottakerEndpoint: /save
  sendInnUrl: http://localhost:3100/sendinn
  sendinn:
    urls:
      default: http://localhost:3100/sendinn
  fyllUtUrl: http://localhost:3001/fyllut
  clientId: clientId
  clientSecret: clientSecret
  pdlScope: api://dev-fss.pdl.pdl-api/.default
  pdlUrl: http://localhost:9043/pdl-api
  safselvbetjeningUrl: http://localhost:9043/safselvbetjening-api
  safUrl: http://localhost:9043/saf-api
  azureUrl: http://localhost:9043/azure-api
  antivirusUrl: http://localhost:9043/antivirus
  arenaUrl: http://localhost:9043/arena-api
  kodeverkUrl: https://kodeverk-api.nav.no
  kontoregisterUrl: http://localhost:9043/kontoregister-api

brukernotifikasjonconfig:
  profiles: test
  fyllutUrl: http://localhost:3001/fyllut
  sendinnUrl: http://localhost:3100/sendinn
  publisereEndringer: true

---
spring:
  config:
    activate:
      on-profile: endtoend

  flyway:
    enabled: true

  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:postgres}?user=${DATABASE_USERNAME:postgres}&password=${DATABASE_PASSWORD:postgres}

status_log_url: "https://logs.adeo.no"
fil-konvertering_url: ${KONVERTERING_TIL_PDF_URL}

restconfig:
  version: 1.0
  maxFileSize: 50
  maxFileSizeSum: 150
  maxNumberOfPages: 200
  sanityHost: https://www.nav.no
  sanityEndpoint: /soknader/api/sanity/skjemautlisting
  filesInOneRequestToFilestorage: 10
  soknadsMottakerHost: ${SOKNADSMOTTAKER_HOST}
  soknadsMottakerEndpoint: /save
  sendInnUrl: http://localhost:3100/sendinn
  sendinn:
    urls:
      default: http://localhost:3100/sendinn
  fyllUtUrl: http://localhost:3001/fyllut
  clientId: ${AZURE_APP_CLIENT_ID}
  clientSecret: ${AZURE_APP_CLIENT_SECRET}
  pdlScope: ${PDL_SCOPE:api://dev-fss.pdl.pdl-api/.default}
  pdlUrl: ${PDL_URL:http://pdl.no}
  safselvbetjeningUrl: ${SAFSELVBETJENING_URL}
  safUrl: ${SAF_URL}
  azureUrl: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
  antivirusUrl: http://localhost:9043/antivirus
  arenaUrl: ${ARENA_URL:http://arena.no}
  kodeverkUrl: ${KODEVERK_URL:http://kodeverk.no}
  kontoregisterUrl: ${KONTOREGISTER_URL:http://kontoregister.no}

brukernotifikasjonconfig:
  fyllutUrl: http://localhost:3001/fyllut
  sendinnUrl: http://localhost:3100/sendinn
  publisereEndringer: true

kafka:
  applicationId: innsending-api-end-to-end
  brokers: ${KAFKA_BROKERS:http://localhost:9092}
  security:
    enabled: FALSE

---
spring:
  config:
    activate:
      on-profile: dev | prod | gcp

  application:
    name: innsending-api

  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE}MB
      max-request-size: ${MAX_FILE_SIZE}MB

  flyway:
    enabled: true
    validateOnMigrate: true
    validateMigrationNaming: true
    outOfOrder: false

  datasource:
    url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DATABASE}?user=${DATABASE_USERNAME}&password=${DATABASE_PASSWORD}
    hikari:
      maximum-pool-size: 12
      connection-timeout: 50000
      max-lifetime: 50001
      validationTimeout: 20000
      leak-detection-threshold: 50000
    dbcp2:
      test-on-borrow: true
      validation-query: "SELECT 1"

status_log_url: ${STATUS_LOG_URL}

fil-konvertering_url: ${KONVERTERING_TIL_PDF_URL}

restconfig:
  version: ${APP_VERSION}
  maxFileSize: ${MAX_FILE_SIZE}
  maxFileSizeSum: ${MAX_FILE_SIZE_SUM}
  maxNumberOfPages: ${MAX_NUMBER_OF_PAGES}
  sanityHost: ${SANITY_HOST}
  sanityEndpoint: ${SANITY_ENDPOINT}
  filesInOneRequestToFilestorage: 10
  soknadsMottakerHost: ${SOKNADSMOTTAKER_HOST}
  soknadsMottakerEndpoint: ${SOKNADSMOTTAKER_ENDPOINT}
  sendInnUrl: ${SEND_INN_URL}
  sendinn:
    urls:
      default: ${SEND_INN_URL}
  fyllUtUrl: ${FYLL_UT_URL}
  clientId: ${AZURE_APP_CLIENT_ID}
  clientSecret: ${AZURE_APP_CLIENT_SECRET}
  pdlScope: ${PDL_SCOPE}
  pdlUrl: ${PDL_URL}
  safselvbetjeningUrl: ${SAFSELVBETJENING_URL}
  safUrl: ${SAF_URL}
  azureUrl: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
  antivirusUrl: ${ANTIVIRUS_URL}
  arenaUrl: ${ARENA_URL}
  kodeverkUrl: ${KODEVERK_URL}
  kontoregisterUrl: ${KONTOREGISTER_URL}


brukernotifikasjonconfig:
  profiles: ${SPRING_PROFILES_ACTIVE}
  fyllutUrl: ${FYLL_UT_URL}
  sendinnUrl: ${SEND_INN_URL}
  publisereEndringer: ${PUBLISERE_BRUKERNOTIFIKASJONER}

ettersendingsfrist: ${ETTERSENDINGSFRIST}

no.nav.security.jwt:
  issuer:
    tokenx:
      discoveryurl: ${TOKEN_X_WELL_KNOWN_URL}
      accepted_audience: ${TOKEN_X_CLIENT_ID}
    azuread:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${AZURE_APP_CLIENT_ID}

  client:
    registration:
      tokenx-safselvbetjening:
        token-endpoint-url: ${TOKEN_X_TOKEN_ENDPOINT}
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        authentication:
          client-auth-method: private_key_jwt
          client-id: ${TOKEN_X_CLIENT_ID}
          client-jwk: ${TOKEN_X_PRIVATE_JWK}
        token-exchange:
          audience: ${SAFSELVBETJENING_TOKEN_X_AUDIENCE}

      tokenx-pdl:
        token-endpoint-url: ${TOKEN_X_TOKEN_ENDPOINT}
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        authentication:
          client-auth-method: private_key_jwt
          client-id: ${TOKEN_X_CLIENT_ID}
          client-jwk: ${TOKEN_X_PRIVATE_JWK}
        token-exchange:
          audience: ${PDL_TOKEN_X_AUDIENCE}

      soknadsmottaker:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${SOKNADSMOTTAKER_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic

      kontoregister:
        token-endpoint-url: ${TOKEN_X_TOKEN_ENDPOINT}
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        scope: ${KONTOREGISTER_SCOPE}
        authentication:
          client-auth-method: private_key_jwt
          client-id: ${TOKEN_X_CLIENT_ID}
          client-jwk: ${TOKEN_X_PRIVATE_JWK}
        token-exchange:
          audience: ${KONTOREGISTER_TOKEN_X_AUDIENCE}

      kodeverk:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${KODEVERK_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-jwk: ${AZURE_APP_JWK}
          client-auth-method: private_key_jwt

      saf-maskintilmaskin:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${SAF_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-jwk: ${AZURE_APP_JWK}
          client-auth-method: private_key_jwt

      arena:
        token-endpoint-url: ${TOKEN_X_TOKEN_ENDPOINT}
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        scope: ${ARENA_SCOPE}
        authentication:
          client-auth-method: private_key_jwt
          client-id: ${TOKEN_X_CLIENT_ID}
          client-jwk: ${TOKEN_X_PRIVATE_JWK}
        token-exchange:
          audience: ${ARENA_TOKEN_X_AUDIENCE}

---
spring:
  config:
    activate:
      on-profile: loadtests

  datasource:
    url: ${DATABASE_JDBC_URL}

fil-konvertering_url: ${KONVERTERING_TIL_PDF_URL}

---
spring:
  config:
    activate:
      on-profile: test | dev

  datasource:
    hikari:
      maximum-pool-size: 3

restconfig:
  sendinn:
    urls:
      preprodIntern: https://www.intern.dev.nav.no/sendinn
      preprodAltIntern: https://www.intern.dev.nav.no/sendinn-alt
      preprodAnsatt: https://www.ansatt.dev.nav.no/sendinn
      preprodAltAnsatt: https://www.ansatt.dev.nav.no/sendinn-alt
      delingslenke: https://www.ansatt.dev.nav.no/sendinn-delingslenke
      default: ${SEND_INN_URL:http://localhost:3100/sendinn}
