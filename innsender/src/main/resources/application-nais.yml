# For alle profilene som kj√∏rer i nais platformen
spring:
  config:
    activate:
      on-profile: dev | prod

  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE}MB
      max-request-size: ${MAX_FILE_SIZE}MB

  flyway:
    enabled: true
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DATABASE}?user=${DATABASE_USERNAME}&password=${DATABASE_PASSWORD}
    hikari:
      minimum-idle: 1
      maximum-pool-size: 20
      connection-timeout: 50000
      max-lifetime: 50001
      validationTimeout: 20000
      leak-detection-threshold: 40000
    dbcp2:
      test-on-borrow: true
      validation-query: "SELECT 1"

restconfig:
  version: ${APP_VERSION}
  username: ${APPLICATION_USERNAME}
  password: ${APPLICATION_PASSWORD}
  sharedUsername: ${INNSENDING_USERNAME}
  sharedPassword: ${INNSENDING_PASSWORD}
  maxFileSize: ${MAX_FILE_SIZE}
  maxFileSizeSum: ${MAX_FILE_SIZE_SUM}
  sanityHost: ${SANITY_HOST}
  sanityEndpoint: ${SANITY_ENDPOINT}
  filestorageHost: ${FILESTORAGE_HOST}
  filestorageEndpoint: ${FILESTORAGE_ENDPOINT}
  filestorageParameters: ${FILESTORAGE_PARAMETERS}
  filesInOneRequestToFilestorage: 10
  soknadsMottakerHost: ${SOKNADSMOTTAKER_HOST}
  soknadsMottakerEndpoint: ${SOKNADSMOTTAKER_ENDPOINT}
  frontEndFortsettEndpoint: ${TJENESTE_URL}
  clientId: ${AZURE_APP_CLIENT_ID}
  clientSecret: ${AZURE_APP_CLIENT_SECRET}
  pdlScope: ${PDL_SCOPE}
  pdlUrl: ${PDL_URL}
  safselvbetjeningUrl: ${SAFSELVBETJENING_URL}
  safUrl: ${SAF_URL}
  azureUrl: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}



brukernotifikasjonconfig:
  profiles: ${SPRING_PROFILES_ACTIVE}
  tjenesteUrl: ${TJENESTE_URL}
  publisereEndringer: ${PUBLISERE_BRUKERNOTIFIKASJONER}

ettersendingsfrist: ${ETTERSENDINGSFRIST}

no.nav.security.jwt:
  issuer.tokenx:
    discoveryurl: ${TOKEN_X_WELL_KNOWN_URL}
    accepted_audience: ${TOKEN_X_CLIENT_ID}

  client:
    registration:
      tokenx-safselvbetjening:
        token-endpoint-url: ${TOKENDINGS_BASE_URL}/token
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        authentication:
          client-auth-method: private_key_jwt
          client-id: ${TOKEN_X_CLIENT_ID}
          client-jwk: ${TOKEN_X_PRIVATE_JWK}
        token-exchange:
          audience: ${SAFSELVBETJENING_TOKEN_X_AUDIENCE}

      tokenx-pdl:
        token-endpoint-url: ${TOKENDINGS_BASE_URL}/token
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        authentication:
          client-auth-method: private_key_jwt
          client-id: ${TOKEN_X_CLIENT_ID}
          client-jwk: ${TOKEN_X_PRIVATE_JWK}
        token-exchange:
          audience: ${PDL_TOKEN_X_AUDIENCE}

      soknadsmottaker:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${SOKNADSMOTTAKER_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic

      saf-maskintilmaskin:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${SAF_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-jwk: ${AZURE_APP_JWK}
          client-auth-method: private_key_jwt
