server:
  port: 9064

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

spring:
  config:
    activate:
      on-profile: test

  flyway:
    enabled: true

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?user=postgres&password=postgres

management:
  endpoint:
  health:
  show-details: always
  endpoints.web:
  exposure:
  include: info, health, metrics, refresh, prometheus
  base-path: "/internal"
  metrics:
  export:
  prometheus:
  enabled: true

kafka:
  applicationId: testApplicationId
  brokers: localhost:29092
  security:
    enabled: FALSE
    protocol: SSL
    keyStoreType: PKCS12
    keyStorePath: dummy
    keyStorePassword: dummy
    trustStorePath: dummy
    trustStorePassword: dummy
  topics:
    messageTopic: privat-soknadinnsending-messages-v2-dev

restconfig:
  version: 1.0
  username: srvuser
  password: password
  sharedUsername: innsending
  sharedPassword: password
  maxFileSize: 50
  maxFileSizeSum: 150
  sanityHost: localhost:5490
  sanityEndpoint: /soknader/api/sanity/skjemautlisting
  filesInOneRequestToFilestorage: 10
  soknadsMottakerHost: http://localhost:${wiremock.server.port}/soknadsmottaker-api
  soknadsMottakerEndpoint: /save
  sendInnUrl: http://localhost:3100/sendinn
  fyllUtUrl: http://localhost:3000/fyllut
  clientId: clientId
  clientSecret: clientSecret
  pdlScope: api://dev-fss.pdl.pdl-api/.default
  pdlUrl: http://localhost:${wiremock.server.port}/pdl-api
  safselvbetjeningUrl: http://localhost:${wiremock.server.port}/safselvbetjening-api
  safUrl: http://localhost:${wiremock.server.port}/saf-api
  azureUrl: http://localhost:${wiremock.server.port}/azure-api
  antivirusUrl: http://localhost:${wiremock.server.port}/antivirus


brukernotifikasjonconfig:
  profiles: test
  tjenesteUrl: https://localhost
  publisereEndringer: true

ettersendingsfrist: 14

wiremock:
  reset-mappings-after-each-test: true
  server:
    port: 0 # random port


no.nav.security.jwt:
  mock:
    enable: true
  issuer:
    tokenx:
      discoveryurl: http://localhost:${mock-oauth2-server.port}/tokenx/.well-known/openid-configuration
      accepted_audience: aud-localhost
      cookie_name: tokenx

  client:
    registration:
      tokenx-safselvbetjening:
        token-endpoint-url: http://kms.adeo.no:${mock-oauth2-server.port}/tokenx/token
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        authentication:
          client-auth-method: private_key_jwt
          client-id: "dev-gcp:team-soknad:innsending-api"
          client-jwk: src/test/resources/tokenx-jwk.json
        token-exchange:
          audience: dev-fss:teamdokumenthandtering:safselvbetjening

      tokenx-pdl:
        token-endpoint-url: http://localhost:${mock-oauth2-server.port}/tokenx/token
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        authentication:
          client-auth-method: private_key_jwt
          client-id: "dev-gcp:team-soknad:innsending-api"
          client-jwk: src/test/resources/tokenx-jwk.json
        token-exchange:
          audience: dummyAudience

      saf-maskintilmaskin:
        token-endpoint-url: http://localhost:${mock-oauth2-server.port}/tokenx/token
        grant-type: client_credentials
        scope: ${SAF_SCOPE}
        authentication:
          client-id: "dev-gcp:team-soknad:innsending-api"
          client-jwk: src/test/resources/tokenx-jwk.json
          client-auth-method: private_key_jwt
