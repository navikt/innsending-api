server:
  port: 9064

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

  flyway:
    enabled: true

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?user=postgres&password=postgres

management:
  endpoint:
  health:
  show-details: always
  endpoints.web:
  exposure:
  include: info, health, metrics, refresh, prometheus
  base-path: "/internal"
  metrics:
  export:
  prometheus:
  enabled: true

restconfig:
  version: 1.0
  username: srvuser
  password: password
  sharedUsername: innsending
  sharedPassword: password
  maxFileSize: 100
  maxFileSizeSum: 300
  sanityHost: https://www.nav.no
  sanityEndpoint: /soknader/api/sanity/skjemautlisting
  filestorageHost: http://localhost:${wiremock.server.port}/filestorage-api
  filestorageEndpoint: /filer
  filestorageParameters: /
  filesInOneRequestToFilestorage: 10
  soknadsMottakerHost: http://localhost:${wiremock.server.port}/soknadsmottaker-api
  soknadsMottakerEndpoint: /save
  frontEndFortsettEndpoint: http://localhost:3000/dokumentinnsending/oversikt/
  pdlUrl: http://localhost:${wiremock.server.port}/pdf-api
  safUrl: http://localhost:${wiremock.server.port}/saf-api
  stsUrl: http://localhost:${wiremock.server.port}/sts-api

dbconfig:
  profiles: test
  databaseName: postgres
  mountPathVault: postgresql/preprod-fss
  databaseUrl: jdbc:postgresql://localhost:5432/postgres
  embedded: true
  usevault: false

brukernotifikasjonconfig:
  profiles: test
  tjenesteUrl: https://localhost
  gjenopptaSoknadsArbeid: /dokumentinnsending/oversikt/
  ettersendePaSoknad: /dokumentinnsending/ettersending/
  publisereEndringer: true

ettersendingsfrist: 42

wiremock:
  reset-mappings-after-each-test: true
  server:
    port: 0 # random port


no.nav.security.jwt:
  mock:
    enable: true
  issuers:
    issuer1:
      discoveryurl: http://localhost:${mock-oauth2-server.port}/issuer1/.well-known/openid-configuration
      accepted_audience: someaudience
      cookiename=localhost-idtoken:
    tokenx:
      discoveryurl: http://localhost:${mock-oauth2-server.port}/tokenx/.well-known/openid-configuration
      accepted_audience: aud-localhost

  client:
    registration:
      tokenx-safselvbetjening:
        token-endpoint-url: http://localhost:${mock-oauth2-server.port}/default/token
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        authentication:
          client-auth-method: private_key_jwt
          client-id: "dev-gcp:team-soknad:innsending-api"
          client-jwk: src/test/resources/tokenx-jwk.json
        token-exchange:
          audience: dev-fss:teamdokumenthandtering:safselvbetjening
