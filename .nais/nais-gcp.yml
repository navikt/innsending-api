apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: {{application-name}}
  namespace: {{namespace}}
  labels:
    team: {{team}}
  annotations:
    nais.io/read-only-file-system: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "51M"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"

spec:
  image: {{image}}
  port: 9064
  liveness:
    path: /health/isAlive
    initialDelay: 40
  readiness:
    path: /health/isReady
    initialDelay: 40
  prometheus:
    enabled: true
    path: /internal/prometheus
  replicas:
    min: 2
    max: 6
  resources:
    limits:
      cpu: 3000m
      memory: 6Gi
    requests:
      cpu: 200m
      memory: 1Gi
  leaderElection: true
  secureLogs:
    enabled: true
  kafka:
    pool: {{kafka-pool}}
    streams: true
  observability:
    autoInstrumentation:
      enabled: true
      runtime: java
  tokenx:
    enabled: true
  azure:
    application:
      enabled: true
      tenant: {{AZURE_TENANT}}

  accessPolicy:
    inbound:
      rules:
      {{#each accessPolicyInbound.current-namespace}}
        - application: "{{this}}"
      {{/each}}
      {{#each accessPolicyInbound.other-namespace}}
        - application: "{{this.application}}"
          namespace: "{{this.namespace}}"
      {{/each}}
      {{#each accessPolicyInbound.other-cluster}}
        - application: "{{this.application}}"
          namespace: "{{this.namespace}}"
          cluster: "{{this.cluster}}"
      {{/each}}

    outbound:
      external:
      {{#each accessPolicyOutbound.external-hosts}}
        - host: "{{this}}"
      {{/each}}
      rules:
      {{#each accessPolicyOutbound.current-namespace}}
        - application: "{{this}}"
      {{/each}}
      {{#each accessPolicyOutbound.other-namespace}}
        - application: "{{this.application}}"
          namespace: "{{this.namespace}}"
      {{/each}}

  ingresses:
  {{#each ingresses}}
    - "{{this}}"
  {{/each}}

  gcp:
    sqlInstances:
      - type: POSTGRES_15
        tier: {{ tier }}
        diskType: SSD
        highAvailability: true
        diskSize: {{ default_database_size }}
        diskAutoresize: true
        autoBackupHour: 6
        databases:
          - name: {{ database-name }}
            envVarPrefix: DATABASE

  env:
  {{#each env}}
    - name: {{@key}}
      value: "{{this}}"
  {{/each}}
