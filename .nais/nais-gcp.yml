apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: {{application-name}}
  namespace: {{namespace}}
  labels:
    team: {{team}}
  annotations:
    nais.io/read-only-file-system: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "100M"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"

spec:
  image: {{image}}
  port: 9064
  liveness:
    path: /health/isAlive
    initialDelay: 20
  readiness:
    path: /health/isReady
    initialDelay: 20
  prometheus:
    enabled: true
    path: /internal/prometheus
  replicas:
    min: 4
    max: 6
  resources:
    limits:
      cpu: 3000m
      memory: 6Gi
    requests:
      cpu: 200m
      memory: 1Gi
  leaderElection: true

  tokenx:
    enabled: true
  azure:
    application:
      enabled: true
      tenant: {{AZURE_TENANT}}

  accessPolicy:
    inbound:
      rules:
        - application: send-inn-frontend
        - application: send-inn-frontend-alt
        - application: dokumentinnsending-send-inn
        - application: skjemautfylling
          namespace: skjemadigitalisering
        - application: skjemautfylling-delingslenke
          namespace: skjemadigitalisering
        - application: skjemautfylling-experimental
          namespace: skjemadigitalisering
    outbound:
      external:
      {{#each outboundExternalHosts}}
       - host: "{{this}}"
      {{/each}}
      rules:
      {{#each outboundRulesGcpApplications}}
        - application: "{{this}}"
      {{/each}}
        - application: soknadsveiviser
          cluster: prod-gcp
          namespace: skjemadigitalisering

  ingresses:
  {{#each ingresses}}
    - "{{this}}"
  {{/each}}

  gcp:
    sqlInstances:
      - type: POSTGRES_14
        databases:
          - name: {{ database-name }}
            envVarPrefix: DATABASE

  envFrom:
    - secret: shared-innsending-secret
      metadata:
        annotations:
          reloader.stakater.com/match: "true"

  env:
  {{#each env}}
    - name: {{@key}}
      value: "{{this}}"
  {{/each}}
